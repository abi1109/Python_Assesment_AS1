{"name": "test_stackify_application_as", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: chrome=131.0.6778.140)\nStacktrace:\n0   chromedriver                        0x000000010b4d0e82 chromedriver + 6696578\n1   chromedriver                        0x000000010b4c8c9a chromedriver + 6663322\n2   chromedriver                        0x000000010aed0e3e chromedriver + 405054\n3   chromedriver                        0x000000010aec8654 chromedriver + 370260\n4   chromedriver                        0x000000010aeb8b81 chromedriver + 306049\n5   chromedriver                        0x000000010aeba608 chromedriver + 312840\n6   chromedriver                        0x000000010aeb8e3d chromedriver + 306749\n7   chromedriver                        0x000000010aeb86fa chromedriver + 304890\n8   chromedriver                        0x000000010aeb8638 chromedriver + 304696\n9   chromedriver                        0x000000010aeb6a1b chromedriver + 297499\n10  chromedriver                        0x000000010aeb6da7 chromedriver + 298407\n11  chromedriver                        0x000000010aed3cf8 chromedriver + 417016\n12  chromedriver                        0x000000010af6a032 chromedriver + 1032242\n13  chromedriver                        0x000000010af46872 chromedriver + 886898\n14  chromedriver                        0x000000010af693f4 chromedriver + 1029108\n15  chromedriver                        0x000000010af46613 chromedriver + 886291\n16  chromedriver                        0x000000010af13950 chromedriver + 678224\n17  chromedriver                        0x000000010af1434e chromedriver + 680782\n18  chromedriver                        0x000000010b49e770 chromedriver + 6489968\n19  chromedriver                        0x000000010b4a1219 chromedriver + 6500889\n20  chromedriver                        0x000000010b4a0d3b chromedriver + 6499643\n21  chromedriver                        0x000000010b4a16a5 chromedriver + 6502053\n22  chromedriver                        0x000000010b489524 chromedriver + 6403364\n23  chromedriver                        0x000000010b4a198f chromedriver + 6502799\n24  chromedriver                        0x000000010b47a954 chromedriver + 6342996\n25  chromedriver                        0x000000010b4b9378 chromedriver + 6599544\n26  chromedriver                        0x000000010b4b9535 chromedriver + 6599989\n27  chromedriver                        0x000000010b4c8868 chromedriver + 6662248\n28  libsystem_pthread.dylib             0x00007ff81c521253 _pthread_start + 99\n29  libsystem_pthread.dylib             0x00007ff81c51cbef thread_start + 15", "trace": "self = <stackify_application_test.TestStackifyApplicationAS object at 0x10a4b39d0>\nreadJson = {'Company_Size': '100-500', 'Email': 'abi.sundar@gmail.com', 'First_Name': 'Abinaya', 'Industry': 'Information Technology and Services', ...}\n\n    def test_stackify_application_as(self, readJson):\n        HomePage = HomePageAS(self.driver)\n        LoginPage = LoginPageAS(self.driver)\n        RubyPage = RubyPageAS(self.driver)\n        Request_demo = RequestDemoPageAS(self.driver)\n>       HomePage.launch_application(readJson['stackify_url'])\n\ntest_file/stackify_application_test.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/home_page.py:24: in launch_application\n    self.driver.get(url)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:393: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10a589160>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...7ff81c521253 _pthread_start + 99\\\\n29  libsystem_pthread.dylib             0x00007ff81c51cbef thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=131.0.6778.140)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010b4d0e82 chromedriver + 6696578\nE       1   chromedriver                        0x000000010b4c8c9a chromedriver + 6663322\nE       2   chromedriver                        0x000000010aed0e3e chromedriver + 405054\nE       3   chromedriver                        0x000000010aec8654 chromedriver + 370260\nE       4   chromedriver                        0x000000010aeb8b81 chromedriver + 306049\nE       5   chromedriver                        0x000000010aeba608 chromedriver + 312840\nE       6   chromedriver                        0x000000010aeb8e3d chromedriver + 306749\nE       7   chromedriver                        0x000000010aeb86fa chromedriver + 304890\nE       8   chromedriver                        0x000000010aeb8638 chromedriver + 304696\nE       9   chromedriver                        0x000000010aeb6a1b chromedriver + 297499\nE       10  chromedriver                        0x000000010aeb6da7 chromedriver + 298407\nE       11  chromedriver                        0x000000010aed3cf8 chromedriver + 417016\nE       12  chromedriver                        0x000000010af6a032 chromedriver + 1032242\nE       13  chromedriver                        0x000000010af46872 chromedriver + 886898\nE       14  chromedriver                        0x000000010af693f4 chromedriver + 1029108\nE       15  chromedriver                        0x000000010af46613 chromedriver + 886291\nE       16  chromedriver                        0x000000010af13950 chromedriver + 678224\nE       17  chromedriver                        0x000000010af1434e chromedriver + 680782\nE       18  chromedriver                        0x000000010b49e770 chromedriver + 6489968\nE       19  chromedriver                        0x000000010b4a1219 chromedriver + 6500889\nE       20  chromedriver                        0x000000010b4a0d3b chromedriver + 6499643\nE       21  chromedriver                        0x000000010b4a16a5 chromedriver + 6502053\nE       22  chromedriver                        0x000000010b489524 chromedriver + 6403364\nE       23  chromedriver                        0x000000010b4a198f chromedriver + 6502799\nE       24  chromedriver                        0x000000010b47a954 chromedriver + 6342996\nE       25  chromedriver                        0x000000010b4b9378 chromedriver + 6599544\nE       26  chromedriver                        0x000000010b4b9535 chromedriver + 6599989\nE       27  chromedriver                        0x000000010b4c8868 chromedriver + 6662248\nE       28  libsystem_pthread.dylib             0x00007ff81c521253 _pthread_start + 99\nE       29  libsystem_pthread.dylib             0x00007ff81c51cbef thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException"}, "attachments": [{"name": "log", "source": "b55203b4-ab11-458f-9e33-a1a1110691f7-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "ddc4c3ea-0abb-4ced-9df6-a55fc3ad9185-attachment.txt", "type": "text/plain"}], "start": 1734088816243, "stop": 1734088816500, "uuid": "ef70d35f-e806-4a41-8058-db1a5bd82c04", "historyId": "acf25f3de598503211b2c01336ee2304", "testCaseId": "acf25f3de598503211b2c01336ee2304", "fullName": "test_file.stackify_application_test.TestStackifyApplicationAS#test_stackify_application_as", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser_cbt')"}, {"name": "parentSuite", "value": "test_file"}, {"name": "suite", "value": "stackify_application_test"}, {"name": "subSuite", "value": "TestStackifyApplicationAS"}, {"name": "host", "value": "Apples-MacBook-Pro.local"}, {"name": "thread", "value": "21619-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_file.stackify_application_test"}]}