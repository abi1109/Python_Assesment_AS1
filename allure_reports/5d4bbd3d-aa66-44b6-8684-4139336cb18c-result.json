{"name": "test_stackify_application_as", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on input", "trace": "self = <stackify_application_test.TestStackifyApplicationAS object at 0x1026e2990>\nreadJson = {'Email': 'abi.sundar@gmail.com', 'First_Name': 'Abinaya', 'Job_Role': 'Quality Assurance', 'Last_Name': 'Sundaraganapathi', ...}\n\n    def test_stackify_application_as(self, readJson):\n        HomePage = HomePageAS(self.driver)\n        LoginPage = LoginPageAS(self.driver)\n        RubyPage = RubyPageAS(self.driver)\n        Request_demo = RequestDemoPageAS(self.driver)\n        HomePage.launch_application(readJson['stackify_url'])\n        HomePage.validate_logo()\n        HomePage.validate_url(readJson['stackify_url'])\n        HomePage.validate_title(readJson['expected_title'])\n        HomePage.verify_header_menu_options()\n        HomePage.validate_content_under_solutions()\n        HomePage.click_on_ruby()\n        RubyPage.verify_retrace_content()\n        RubyPage.verify_start_a_trial_and_request_demo()\n        RubyPage.click_on_request_demo_button()\n        Request_demo.click_on_schedule_demo()\n        Request_demo.validate_error_message()\n>       Request_demo.enter_details(readJson)\n\ntest_file/stackify_application_test.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/request_demo_page.py:45: in enter_details\n    select = Select(Phone)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.select.Select object at 0x1027b9e80>\nwebelement = <selenium.webdriver.remote.webelement.WebElement (session=\"0df14bc378210aaaa2c1e6da57cb1114\", element=\"f.EEA1297F9BD109176A1201C844F29406.d.180611C887625D3B7012AB28BAFAF393.e.139\")>\n\n    def __init__(self, webelement: WebElement) -> None:\n        \"\"\"Constructor. A check is made that the given element is, indeed, a\n        SELECT tag. If it is not, then an UnexpectedTagNameException is thrown.\n    \n        :Args:\n         - webelement - SELECT element to wrap\n    \n        Example:\n            from selenium.webdriver.support.ui import Select \\n\n            Select(driver.find_element(By.TAG_NAME, \"select\")).select_by_index(2)\n        \"\"\"\n        if webelement.tag_name.lower() != \"select\":\n>           raise UnexpectedTagNameException(f\"Select only works on <select> elements, not on {webelement.tag_name}\")\nE           selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on input\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/support/select.py:39: UnexpectedTagNameException"}, "attachments": [{"name": "stdout", "source": "9e25212e-492a-4487-9183-895c659301cf-attachment.txt", "type": "text/plain"}], "start": 1734072853614, "stop": 1734072889494, "uuid": "17605028-475e-46f3-a6ca-72d5256f993d", "historyId": "acf25f3de598503211b2c01336ee2304", "testCaseId": "acf25f3de598503211b2c01336ee2304", "fullName": "test_file.stackify_application_test.TestStackifyApplicationAS#test_stackify_application_as", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser_cbt')"}, {"name": "parentSuite", "value": "test_file"}, {"name": "suite", "value": "stackify_application_test"}, {"name": "subSuite", "value": "TestStackifyApplicationAS"}, {"name": "host", "value": "Apples-MacBook-Pro.local"}, {"name": "thread", "value": "20302-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_file.stackify_application_test"}]}