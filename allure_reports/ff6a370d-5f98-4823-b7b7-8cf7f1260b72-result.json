{"name": "test_stackify_application_as", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=131.0.6778.110)\nStacktrace:\n0   chromedriver                        0x000000010a000e12 chromedriver + 6696466\n1   chromedriver                        0x0000000109ff8c2a chromedriver + 6663210\n2   chromedriver                        0x0000000109a00bbd chromedriver + 404413\n3   chromedriver                        0x0000000109a52d36 chromedriver + 740662\n4   chromedriver                        0x0000000109a458c3 chromedriver + 686275\n5   chromedriver                        0x0000000109a76872 chromedriver + 886898\n6   chromedriver                        0x0000000109a451c8 chromedriver + 684488\n7   chromedriver                        0x0000000109a76a2e chromedriver + 887342\n8   chromedriver                        0x0000000109a993f4 chromedriver + 1029108\n9   chromedriver                        0x0000000109a76613 chromedriver + 886291\n10  chromedriver                        0x0000000109a43950 chromedriver + 678224\n11  chromedriver                        0x0000000109a4434e chromedriver + 680782\n12  chromedriver                        0x0000000109fce700 chromedriver + 6489856\n13  chromedriver                        0x0000000109fd11a9 chromedriver + 6500777\n14  chromedriver                        0x0000000109fd0ccb chromedriver + 6499531\n15  chromedriver                        0x0000000109fd1635 chromedriver + 6501941\n16  chromedriver                        0x0000000109fb94b4 chromedriver + 6403252\n17  chromedriver                        0x0000000109fd191f chromedriver + 6502687\n18  chromedriver                        0x0000000109faa8e4 chromedriver + 6342884\n19  chromedriver                        0x0000000109fe9308 chromedriver + 6599432\n20  chromedriver                        0x0000000109fe94c5 chromedriver + 6599877\n21  chromedriver                        0x0000000109ff87f8 chromedriver + 6662136\n22  libsystem_pthread.dylib             0x00007ff81c521253 _pthread_start + 99\n23  libsystem_pthread.dylib             0x00007ff81c51cbef thread_start + 15", "trace": "self = <stackify_application_test.TestStackifyApplicationAS object at 0x10da5f390>\nreadJson = {'expected_title': 'Application Performance Monitoring Tools For Developers', 'stackify_url': 'https://stackify.com/'}\n\n    def test_stackify_application_as(self, readJson):\n        HomePage = HomePageAS(self.driver)\n        LoginPage = LoginPageAS(self.driver)\n        RubyPage = RubyPageAS(self.driver)\n        HomePage.launch_application(readJson['stackify_url'])\n        HomePage.validate_logo()\n        HomePage.validate_url(readJson['stackify_url'])\n        HomePage.validate_title(readJson['expected_title'])\n        HomePage.verify_header_menu_options()\n        HomePage.validate_content_under_solutions()\n>       HomePage.click_on_ruby()\n\ntest_file/stackify_application_test.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:88: in click_on_ruby\n    self.driver.find_element(*locators[\"RUBY\"]).click()\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10db2c830>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...7ff81c521253 _pthread_start + 99\\\\n23  libsystem_pthread.dylib             0x00007ff81c51cbef thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=131.0.6778.110)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010a000e12 chromedriver + 6696466\nE       1   chromedriver                        0x0000000109ff8c2a chromedriver + 6663210\nE       2   chromedriver                        0x0000000109a00bbd chromedriver + 404413\nE       3   chromedriver                        0x0000000109a52d36 chromedriver + 740662\nE       4   chromedriver                        0x0000000109a458c3 chromedriver + 686275\nE       5   chromedriver                        0x0000000109a76872 chromedriver + 886898\nE       6   chromedriver                        0x0000000109a451c8 chromedriver + 684488\nE       7   chromedriver                        0x0000000109a76a2e chromedriver + 887342\nE       8   chromedriver                        0x0000000109a993f4 chromedriver + 1029108\nE       9   chromedriver                        0x0000000109a76613 chromedriver + 886291\nE       10  chromedriver                        0x0000000109a43950 chromedriver + 678224\nE       11  chromedriver                        0x0000000109a4434e chromedriver + 680782\nE       12  chromedriver                        0x0000000109fce700 chromedriver + 6489856\nE       13  chromedriver                        0x0000000109fd11a9 chromedriver + 6500777\nE       14  chromedriver                        0x0000000109fd0ccb chromedriver + 6499531\nE       15  chromedriver                        0x0000000109fd1635 chromedriver + 6501941\nE       16  chromedriver                        0x0000000109fb94b4 chromedriver + 6403252\nE       17  chromedriver                        0x0000000109fd191f chromedriver + 6502687\nE       18  chromedriver                        0x0000000109faa8e4 chromedriver + 6342884\nE       19  chromedriver                        0x0000000109fe9308 chromedriver + 6599432\nE       20  chromedriver                        0x0000000109fe94c5 chromedriver + 6599877\nE       21  chromedriver                        0x0000000109ff87f8 chromedriver + 6662136\nE       22  libsystem_pthread.dylib             0x00007ff81c521253 _pthread_start + 99\nE       23  libsystem_pthread.dylib             0x00007ff81c51cbef thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementNotInteractableException"}, "attachments": [{"name": "stdout", "source": "365a0f5b-49b0-40f7-856b-606a556a8bd0-attachment.txt", "type": "text/plain"}], "start": 1733922746108, "stop": 1733922765834, "uuid": "c0595aad-bf2d-47da-9af5-be4a3d75fb94", "historyId": "acf25f3de598503211b2c01336ee2304", "testCaseId": "acf25f3de598503211b2c01336ee2304", "fullName": "test_file.stackify_application_test.TestStackifyApplicationAS#test_stackify_application_as", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser_cbt')"}, {"name": "parentSuite", "value": "test_file"}, {"name": "suite", "value": "stackify_application_test"}, {"name": "subSuite", "value": "TestStackifyApplicationAS"}, {"name": "host", "value": "Apples-MacBook-Pro.local"}, {"name": "thread", "value": "13810-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_file.stackify_application_test"}]}